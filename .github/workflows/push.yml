name: CI

on:
  push:
    branches:
      - master
      - development
      - '[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'
      - development

env:
  CI: true

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test-ci

  build-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}:${{ github.ref }}
      - name: Get the image digest
        run: echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}:${{ github.ref }})"
        id: docker_inspect
    outputs:
      image-digest: ${{ steps.docker_inspect.outputs.digest }}

  release:
    needs: build
    runs-on: ubuntu-latest
    container: node:18
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5  # It is recommended to specify a version range
        # for semantic-release when using
        # semantic-release-action lower than @v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pulumi-deploy:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1

      - name: Deploy with Pulumi
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: dev
          work-dir: pulumi
          env:
            DOCKER_IMAGE_DIGEST: ${{ needs.build-docker.outputs.image-digest }}
