cache:
  paths:
    - node_modules/

before_script:
  - CI=true npm install

stages:
  - test
  - build
  - build-docker
  - release

test:
  image: node:16
  stage: test
  script:
    - CI=true npm run test-ci
  rules:
    - when: never

build:
  image: node:18
  stage: build
  script:
    - CI=true npm run build
  artifacts:
    paths:
      - .next/standalone/
      - public/
      - .next/static/
    
build-docker:
  before_script:
    - echo "pass"
    - echo $CI_COMMIT_TAG
  stage: build-docker
  dependencies:
    - build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "development" || $CI_COMMIT_TAG
      when: always
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: manual

release:
  image: node:18 # Requires GIT
  stage: release
  allow_failure: true
  rules:
    # allow creating releases from master branch and maintenance branches named like this:
    # `MAJOR.MINOR.PATCH`, e.g. `1.16.2`
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^[0-9]+(\.([0-9]+|x))?\.x$/'
      when: always
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: manual
    - when: never
  script:
    - npm install @semantic-release/gitlab @semantic-release/exec @saithodev/semantic-release-backmerge
    - npx semantic-release




